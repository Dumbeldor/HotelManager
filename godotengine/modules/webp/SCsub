#!/usr/bin/env python

Import('env')
Import('env_modules')

env_webp = env_modules.Clone()

# Thirdparty source files
if (env['builtin_libwebp'] != 'no'):
    thirdparty_dir = "#thirdparty/libwebp/"
    thirdparty_sources = [
        "enc/webpenc.c",
        "enc/near_lossless.c",
        "enc/frame.c",
        "enc/alpha.c",
        "enc/picture_csp.c",
        "enc/vp8l.c",
        "enc/picture_psnr.c",
        "enc/delta_palettization.c",
        "enc/syntax.c",
        "enc/backward_references.c",
        "enc/token.c",
        "enc/analysis.c",
        "enc/iterator.c",
        "enc/picture_tools.c",
        "enc/picture_rescale.c",
        "enc/config.c",
        "enc/tree.c",
        "enc/cost.c",
        "enc/picture.c",
        "enc/quant.c",
        "enc/filter.c",
        "enc/histogram.c",
        "utils/rescaler.c",
        "utils/filters.c",
        "utils/quant_levels_dec.c",
        "utils/huffman.c",
        "utils/thread.c",
        "utils/quant_levels.c",
        "utils/bit_writer.c",
        "utils/bit_reader.c",
        "utils/random.c",
        "utils/utils.c",
        "utils/huffman_encode.c",
        "utils/color_cache.c",
        "mux/muxinternal.c",
        "mux/muxread.c",
        "mux/anim_encode.c",
        "mux/muxedit.c",
        "dec/webp.c",
        "dec/frame.c",
        "dec/alpha.c",
        "dec/vp8l.c",
        "dec/io.c",
        "dec/vp8.c",
        "dec/idec.c",
        "dec/tree.c",
        "dec/buffer.c",
        "dec/quant.c",
        "demux/demux.c",
        "demux/anim_decode.c",
        "dsp/yuv.c",
        "dsp/filters_sse2.c",
        "dsp/dec_sse41.c",
        "dsp/rescaler.c",
        "dsp/lossless_sse2.c",
        "dsp/alpha_processing_sse41.c",
        "dsp/alpha_processing_sse2.c",
        "dsp/filters.c",
        "dsp/upsampling_mips_dsp_r2.c",
        "dsp/dec_neon.c",
        "dsp/enc_neon.c",
        "dsp/lossless_enc_mips32.c",
        "dsp/lossless_enc_sse2.c",
        "dsp/upsampling.c",
        "dsp/lossless_enc_neon.c",
        "dsp/alpha_processing.c",
        "dsp/cost_sse2.c",
        "dsp/dec_mips32.c",
        "dsp/enc_avx2.c",
        "dsp/rescaler_mips32.c",
        "dsp/enc.c",
        "dsp/lossless_enc_sse41.c",
        "dsp/cost_mips32.c",
        "dsp/lossless_mips_dsp_r2.c",
        "dsp/filters_mips_dsp_r2.c",
        "dsp/upsampling_neon.c",
        "dsp/alpha_processing_mips_dsp_r2.c",
        "dsp/enc_mips_dsp_r2.c",
        "dsp/lossless.c",
        "dsp/yuv_mips_dsp_r2.c",
        "dsp/cost_mips_dsp_r2.c",
        "dsp/argb.c",
        "dsp/dec_sse2.c",
        "dsp/rescaler_sse2.c",
        "dsp/enc_sse41.c",
        "dsp/argb_mips_dsp_r2.c",
        "dsp/lossless_enc_mips_dsp_r2.c",
        "dsp/dec_clip_tables.c",
        "dsp/yuv_mips32.c",
        "dsp/cpu.c",
        "dsp/dec.c",
        "dsp/argb_sse2.c",
        "dsp/lossless_neon.c",
        "dsp/lossless_enc.c",
        "dsp/enc_mips32.c",
        "dsp/cost.c",
        "dsp/rescaler_mips_dsp_r2.c",
        "dsp/dec_mips_dsp_r2.c",
        "dsp/rescaler_neon.c",
        "dsp/yuv_sse2.c",
        "dsp/enc_sse2.c",
        "dsp/upsampling_sse2.c",
    ]
    thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

    env_webp.add_source_files(env.modules_sources, thirdparty_sources)
    env_webp.Append(CPPPATH=[thirdparty_dir])

# Godot source files
env_webp.add_source_files(env.modules_sources, "*.cpp")
